events {}

http {
    upstream main_api_nodes {
       least_conn;
       server planriean-api-1:3030;
       server planriean-api-2:3030;
    }

    server {
        listen 80;
        server_name planriean.com;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Content-Type $content_type;
            proxy_pass http://192.168.192.1:3003;
            # return 301 https://beta.planriean.com$request_uri;
        }
    }

    # server {
    #     listen 80;
    #     server_name beta-api.planriean.com;

    #     location / {
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header Content-Type $content_type;
    #         proxy_pass http://main_api_nodes;
    #     }
    # }

    server {
        listen 443 ssl;
        server_name planriean.com;

        ssl_certificate /etc/letsencrypt/live/planriean.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/planriean.com/privkey.pem;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Content-Type $content_type;
            proxy_pass http://192.168.192.1:3003;
            # return 301 https://beta.planriean.com$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name beta-api.planriean.com;

        ssl_certificate /etc/letsencrypt/live/planriean.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/planriean.com/privkey.pem;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Content-Type $content_type;
            proxy_pass http://main_api_nodes;
        }
    }
    # server {
    #     listen 80;
    #     server_name lvh.me;

    #     location / {
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_pass http://msu_api_nodes;

    #         # Ensure POST data is forwarded 
    #         proxy_method POST;  

    #         # Additional CORS headers (if needed) 
    #         if ($request_method = 'OPTIONS') {
    #             add_header 'Access-Control-Allow-Origin' '*'; 
    #             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #             # Custom headers, if needed
    #             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    #             add_header 'Access-Control-Max-Age' 1728000;
    #             add_header 'Content-Type' 'text/plain charset=UTF-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #         }
    #         if ($request_method = 'POST') {
    #             add_header 'Access-Control-Allow-Origin' '*';
    #             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    #             add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    #         }
    #         if ($request_method = 'GET') {
    #             add_header 'Access-Control-Allow-Origin' '*';
    #             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    #             add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    #             add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    #         }
    #     }
    # }

    # server {
    #     listen 80;
    #     server_name beta.planriean.com;

    #     location / {
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header Content-Type $content_type;
    #         return 301 https://dev.planriean.com$request_uri;
    #     }
    # }

    # server {
    #     listen 443 ssl;
    #     server_name ...;

    #     ssl_certificate /etc/nginx/certs/...crt;
    #     ssl_certificate_key /etc/nginx/certs/...key;
    #     ssl_trusted_certificate /etc/nginx/certs/...ca-bundle;

    #     location / {
    #         proxy_pass http://web_nodes;
    #     }
    # }
}
